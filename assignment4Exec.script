Script started on Tue Apr  1 18:15:16 2014
[?1034hbash-3.2$ make ./clean
rm -rf *.o build
bash-3.2$ make
g++ -c Complex.cpp
g++ -c Set.cpp
g++ -c setTestDriver.cpp
g++ setTestDriver.o Complex.o Set.o -o assignment4Exec
./assignment4Exec
Welcome to the Set Manipulation Program
In this program a Set has only complex numbers
The maximum number of elements in a Set is 100.Duplicate elements will be ignored
setA is empty
setB is not full
Enter data into Set A
Enter number of elements in Set A, followed by the elements.
Separate elements with a whitespace
To enter a complex number enter only the real and imaginary parts
For example enter '4 8' to represent '4 + 8i'
3
1 2
99 -94.0
0 -8
Input a filename to read data into Set B
inputs/input_small.txt
The file should have the number of elements, followed by the elements.
Separate elements with a whitespace
setA is {1.0+2.0i, 99.0-94.0i, -8.0i}
setB is {1.0+2.0i, 3.0+4.0i, 5.0+6.0i}
setA is not empty
setB is not full

setC = setB is {1.0+2.0i, 3.0+4.0i, 5.0+6.0i}
setD = C1 is {6.5+7.8i}
The union of Set A and Set B (setA + setB) is {1.0+2.0i, 99.0-94.0i, -8.0i, 3.0+4.0i, 5.0+6.0i}
After adding a complex number to the set, Set A is {1.0+2.0i, 99.0-94.0i, -8.0i, 6.5+7.8i}
After adding a complex number to the (union) set, Set D  is {1.0+2.0i, 99.0-94.0i, -8.0i, 3.0+4.0i, 5.0+6.0i, 6.5+7.8i}
The intersection of Set C and Set D (setC * setD) is {1.0+2.0i, 3.0+4.0i, 5.0+6.0i}
The intersection of Set B and Set C (setB * setC) is {1.0+2.0i, 3.0+4.0i, 5.0+6.0i}
setD is not empty
setD is not full
setE is not empty
setE is not full
After removing C1, setA is {1.0+2.0i, 99.0-94.0i, -8.0i}
setA is {1.0+2.0i, 99.0-94.0i, -8.0i}
setB is {1.0+2.0i, 3.0+4.0i, 5.0+6.0i}
setC is {1.0+2.0i, 3.0+4.0i, 5.0+6.0i}
setD is {1.0+2.0i, 99.0-94.0i, -8.0i, 3.0+4.0i, 5.0+6.0i, 6.5+7.8i}
setE is {1.0+2.0i, 3.0+4.0i, 5.0+6.0i}
Do you want to continue playing (y/n)?
y
setA is not empty
setB is not full
Enter data into Set A
Enter number of elements in Set A, followed by the elements.
Separate elements with a whitespace
To enter a complex number enter only the real and imaginary parts
For example enter '4 8' to represent '4 + 8i'
4
1 2
-99 0
78.893 0.59
98.12 -9
Input a filename to read data into Set B
in nputs/input_large.txt
The file should have the number of elements, followed by the elements.
Separate elements with a whitespace
* Array is full. Object not added.
setA is {1.0+2.0i, 99.0-94.0i, -8.0i, -99.0, 78.9+0.6i, 98.1-9.0i}
setB is {1.0+2.0i, 3.0+4.0i, 5.0+6.0i, 2757.0+95280.0i, 17711.0+23860.0i, 52295.0+93548.0i, 96348.0+14506.0i, 33473.0+23456.0i, 80067.0+10234.0i, 46291.0+85003.0i, 21983.0+11043.0i, 90748.0+51632.0i, 68981.0+70049.0i, 66845.0+76458.0i, 47618.0+34137.0i, 48023.0+6366.0i, 31337.0+29865.0i, 60840.0+67913.0i, 73253.0+57231.0i, 5297.0+34542.0i, 20251.0+89680.0i, 54836.0+59368.0i, 98889.0+53768.0i, 62572.0+89275.0i, 9166.0+49495.0i, 75390.0+50823.0i, 24524.0+76862.0i, 19847.0+17451.0i, 71522.0+35869.0i, 69385.0+42278.0i, 50159.0+99957.0i, 50564.0+72185.0i, 60436.0+95684.0i, 89939.0+33733.0i, 75794.0+23051.0i, 7838.0+361.0i, 22792.0+55500.0i, 83935.0+25187.0i, 1429.0+19588.0i, 65113.0+55095.0i, 11706.0+15315.0i, 77931.0+16642.0i, 27065.0+42682.0i, 22388.0+83271.0i, 620.0+1689.0i, 98484.0+8097.0i, 52700.0+65777.0i, 79662.0+38005.0i, 62977.0+61504.0i, 92480.0+99552.0i, 4893.0+88871.0i, 36937.0+66181.0i, 51891.0+21319.0i, 86476.0+91007.0i, 30528.0+85407.0i, 94212.0+20915.0i, 14247.0+81135.0i, 7029.0+55904.0i, 56163.0+8502.0i, 24928.0+49091.0i, 3161.0+40950.0i, 1025.0+47359.0i, 81799.0+31596.0i, 82203.0+3825.0i, 92075.0+27324.0i, 95021.0+38814.0i, 7434.0+28133.0i, 39478.0+32001.0i, 54432.0+87139.0i, 15574.0+30269.0i, 33069.0+51227.0i, 96752.0+86735.0i, 43346.0+46955.0i, 9570.0+21724.0i, 58704.0+74322.0i, 54027.0+14911.0i, 5702.0+6770.0i, 3566.0+13179.0i, 84339.0+97416.0i, 11302.0+43087.0i, 94616.0+93144.0i, 24119.0+4634.0i, 9975.0+93953.0i, 42019.0+97821.0i, 56972.0+52959.0i, 18115.0+96089.0i, 35610.0+17047.0i, 99293.0+25997.0i, 45887.0+12774.0i, 12111.0+87544.0i, 87803.0+40141.0i, 56568.0+80730.0i, 34801.0+72590.0i, 32664.0+78999.0i, 13438.0+36678.0i, 13843.0+8906.0i, 97157.0+32405.0i, 26660.0+70454.0i, 39073.0+59772.0i, 71117.0+63640.0i}
setA is not empty
setB is full

setC = setB is {1.0+2.0i, 3.0+4.0i, 5.0+6.0i, 2757.0+95280.0i, 17711.0+23860.0i, 52295.0+93548.0i, 96348.0+14506.0i, 33473.0+23456.0i, 80067.0+10234.0i, 46291.0+85003.0i, 21983.0+11043.0i, 90748.0+51632.0i, 68981.0+70049.0i, 66845.0+76458.0i, 47618.0+34137.0i, 48023.0+6366.0i, 31337.0+29865.0i, 60840.0+67913.0i, 73253.0+57231.0i, 5297.0+34542.0i, 20251.0+89680.0i, 54836.0+59368.0i, 98889.0+53768.0i, 62572.0+89275.0i, 9166.0+49495.0i, 75390.0+50823.0i, 24524.0+76862.0i, 19847.0+17451.0i, 71522.0+35869.0i, 69385.0+42278.0i, 50159.0+99957.0i, 50564.0+72185.0i, 60436.0+95684.0i, 89939.0+33733.0i, 75794.0+23051.0i, 7838.0+361.0i, 22792.0+55500.0i, 83935.0+25187.0i, 1429.0+19588.0i, 65113.0+55095.0i, 11706.0+15315.0i, 77931.0+16642.0i, 27065.0+42682.0i, 22388.0+83271.0i, 620.0+1689.0i, 98484.0+8097.0i, 52700.0+65777.0i, 79662.0+38005.0i, 62977.0+61504.0i, 92480.0+99552.0i, 4893.0+88871.0i, 36937.0+66181.0i, 51891.0+21319.0i, 86476.0+91007.0i, 30528.0+85407.0i, 94212.0+20915.0i, 14247.0+81135.0i, 7029.0+55904.0i, 56163.0+8502.0i, 24928.0+49091.0i, 3161.0+40950.0i, 1025.0+47359.0i, 81799.0+31596.0i, 82203.0+3825.0i, 92075.0+27324.0i, 95021.0+38814.0i, 7434.0+28133.0i, 39478.0+32001.0i, 54432.0+87139.0i, 15574.0+30269.0i, 33069.0+51227.0i, 96752.0+86735.0i, 43346.0+46955.0i, 9570.0+21724.0i, 58704.0+74322.0i, 54027.0+14911.0i, 5702.0+6770.0i, 3566.0+13179.0i, 84339.0+97416.0i, 11302.0+43087.0i, 94616.0+93144.0i, 24119.0+4634.0i, 9975.0+93953.0i, 42019.0+97821.0i, 56972.0+52959.0i, 18115.0+96089.0i, 35610.0+17047.0i, 99293.0+25997.0i, 45887.0+12774.0i, 12111.0+87544.0i, 87803.0+40141.0i, 56568.0+80730.0i, 34801.0+72590.0i, 32664.0+78999.0i, 13438.0+36678.0i, 13843.0+8906.0i, 97157.0+32405.0i, 26660.0+70454.0i, 39073.0+59772.0i, 71117.0+63640.0i}
setD = C1 is {6.5+7.8i}
* Could not obtain the union. Array is full.
The union of Set A and Set B (setA + setB) is {1.0+2.0i, 99.0-94.0i, -8.0i, -99.0, 78.9+0.6i, 98.1-9.0i, 3.0+4.0i, 5.0+6.0i, 2757.0+95280.0i, 17711.0+23860.0i, 52295.0+93548.0i, 96348.0+14506.0i, 33473.0+23456.0i, 80067.0+10234.0i, 46291.0+85003.0i, 21983.0+11043.0i, 90748.0+51632.0i, 68981.0+70049.0i, 66845.0+76458.0i, 47618.0+34137.0i, 48023.0+6366.0i, 31337.0+29865.0i, 60840.0+67913.0i, 73253.0+57231.0i, 5297.0+34542.0i, 20251.0+89680.0i, 54836.0+59368.0i, 98889.0+53768.0i, 62572.0+89275.0i, 9166.0+49495.0i, 75390.0+50823.0i, 24524.0+76862.0i, 19847.0+17451.0i, 71522.0+35869.0i, 69385.0+42278.0i, 50159.0+99957.0i, 50564.0+72185.0i, 60436.0+95684.0i, 89939.0+33733.0i, 75794.0+23051.0i, 7838.0+361.0i, 22792.0+55500.0i, 83935.0+25187.0i, 1429.0+19588.0i, 65113.0+55095.0i, 11706.0+15315.0i, 77931.0+16642.0i, 27065.0+42682.0i, 22388.0+83271.0i, 620.0+1689.0i, 98484.0+8097.0i, 52700.0+65777.0i, 79662.0+38005.0i, 62977.0+61504.0i, 92480.0+99552.0i, 4893.0+88871.0i, 36937.0+66181.0i, 51891.0+21319.0i, 86476.0+91007.0i, 30528.0+85407.0i, 94212.0+20915.0i, 14247.0+81135.0i, 7029.0+55904.0i, 56163.0+8502.0i, 24928.0+49091.0i, 3161.0+40950.0i, 1025.0+47359.0i, 81799.0+31596.0i, 82203.0+3825.0i, 92075.0+27324.0i, 95021.0+38814.0i, 7434.0+28133.0i, 39478.0+32001.0i, 54432.0+87139.0i, 15574.0+30269.0i, 33069.0+51227.0i, 96752.0+86735.0i, 43346.0+46955.0i, 9570.0+21724.0i, 58704.0+74322.0i, 54027.0+14911.0i, 5702.0+6770.0i, 3566.0+13179.0i, 84339.0+97416.0i, 11302.0+43087.0i, 94616.0+93144.0i, 24119.0+4634.0i, 9975.0+93953.0i, 42019.0+97821.0i, 56972.0+52959.0i, 18115.0+96089.0i, 35610.0+17047.0i, 99293.0+25997.0i, 45887.0+12774.0i, 12111.0+87544.0i, 87803.0+40141.0i, 56568.0+80730.0i, 34801.0+72590.0i, 32664.0+78999.0i, 13438.0+36678.0i}
After adding a complex number to the set, Set A is {1.0+2.0i, 99.0-94.0i, -8.0i, -99.0, 78.9+0.6i, 98.1-9.0i, 6.5+7.8i}
* Array is full. Object not added.
After adding a complex number to the (union) set, Set D  is {1.0+2.0i, 99.0-94.0i, -8.0i, -99.0, 78.9+0.6i, 98.1-9.0i, 3.0+4.0i, 5.0+6.0i, 2757.0+95280.0i, 17711.0+23860.0i, 52295.0+93548.0i, 96348.0+14506.0i, 33473.0+23456.0i, 80067.0+10234.0i, 46291.0+85003.0i, 21983.0+11043.0i, 90748.0+51632.0i, 68981.0+70049.0i, 66845.0+76458.0i, 47618.0+34137.0i, 48023.0+6366.0i, 31337.0+29865.0i, 60840.0+67913.0i, 73253.0+57231.0i, 5297.0+34542.0i, 20251.0+89680.0i, 54836.0+59368.0i, 98889.0+53768.0i, 62572.0+89275.0i, 9166.0+49495.0i, 75390.0+50823.0i, 24524.0+76862.0i, 19847.0+17451.0i, 71522.0+35869.0i, 69385.0+42278.0i, 50159.0+99957.0i, 50564.0+72185.0i, 60436.0+95684.0i, 89939.0+33733.0i, 75794.0+23051.0i, 7838.0+361.0i, 22792.0+55500.0i, 83935.0+25187.0i, 1429.0+19588.0i, 65113.0+55095.0i, 11706.0+15315.0i, 77931.0+16642.0i, 27065.0+42682.0i, 22388.0+83271.0i, 620.0+1689.0i, 98484.0+8097.0i, 52700.0+65777.0i, 79662.0+38005.0i, 62977.0+61504.0i, 92480.0+99552.0i, 4893.0+88871.0i, 36937.0+66181.0i, 51891.0+21319.0i, 86476.0+91007.0i, 30528.0+85407.0i, 94212.0+20915.0i, 14247.0+81135.0i, 7029.0+55904.0i, 56163.0+8502.0i, 24928.0+49091.0i, 3161.0+40950.0i, 1025.0+47359.0i, 81799.0+31596.0i, 82203.0+3825.0i, 92075.0+27324.0i, 95021.0+38814.0i, 7434.0+28133.0i, 39478.0+32001.0i, 54432.0+87139.0i, 15574.0+30269.0i, 33069.0+51227.0i, 96752.0+86735.0i, 43346.0+46955.0i, 9570.0+21724.0i, 58704.0+74322.0i, 54027.0+14911.0i, 5702.0+6770.0i, 3566.0+13179.0i, 84339.0+97416.0i, 11302.0+43087.0i, 94616.0+93144.0i, 24119.0+4634.0i, 9975.0+93953.0i, 42019.0+97821.0i, 56972.0+52959.0i, 18115.0+96089.0i, 35610.0+17047.0i, 99293.0+25997.0i, 45887.0+12774.0i, 12111.0+87544.0i, 87803.0+40141.0i, 56568.0+80730.0i, 34801.0+72590.0i, 32664.0+78999.0i, 13438.0+36678.0i}
The intersection of Set C and Set D (setC * setD) is {1.0+2.0i, 3.0+4.0i, 5.0+6.0i, 2757.0+95280.0i, 17711.0+23860.0i, 52295.0+93548.0i, 96348.0+14506.0i, 33473.0+23456.0i, 80067.0+10234.0i, 46291.0+85003.0i, 21983.0+11043.0i, 90748.0+51632.0i, 68981.0+70049.0i, 66845.0+76458.0i, 47618.0+34137.0i, 48023.0+6366.0i, 31337.0+29865.0i, 60840.0+67913.0i, 73253.0+57231.0i, 5297.0+34542.0i, 20251.0+89680.0i, 54836.0+59368.0i, 98889.0+53768.0i, 62572.0+89275.0i, 9166.0+49495.0i, 75390.0+50823.0i, 24524.0+76862.0i, 19847.0+17451.0i, 71522.0+35869.0i, 69385.0+42278.0i, 50159.0+99957.0i, 50564.0+72185.0i, 60436.0+95684.0i, 89939.0+33733.0i, 75794.0+23051.0i, 7838.0+361.0i, 22792.0+55500.0i, 83935.0+25187.0i, 1429.0+19588.0i, 65113.0+55095.0i, 11706.0+15315.0i, 77931.0+16642.0i, 27065.0+42682.0i, 22388.0+83271.0i, 620.0+1689.0i, 98484.0+8097.0i, 52700.0+65777.0i, 79662.0+38005.0i, 62977.0+61504.0i, 92480.0+99552.0i, 4893.0+88871.0i, 36937.0+66181.0i, 51891.0+21319.0i, 86476.0+91007.0i, 30528.0+85407.0i, 94212.0+20915.0i, 14247.0+81135.0i, 7029.0+55904.0i, 56163.0+8502.0i, 24928.0+49091.0i, 3161.0+40950.0i, 1025.0+47359.0i, 81799.0+31596.0i, 82203.0+3825.0i, 92075.0+27324.0i, 95021.0+38814.0i, 7434.0+28133.0i, 39478.0+32001.0i, 54432.0+87139.0i, 15574.0+30269.0i, 33069.0+51227.0i, 96752.0+86735.0i, 43346.0+46955.0i, 9570.0+21724.0i, 58704.0+74322.0i, 54027.0+14911.0i, 5702.0+6770.0i, 3566.0+13179.0i, 84339.0+97416.0i, 11302.0+43087.0i, 94616.0+93144.0i, 24119.0+4634.0i, 9975.0+93953.0i, 42019.0+97821.0i, 56972.0+52959.0i, 18115.0+96089.0i, 35610.0+17047.0i, 99293.0+25997.0i, 45887.0+12774.0i, 12111.0+87544.0i, 87803.0+40141.0i, 56568.0+80730.0i, 34801.0+72590.0i, 32664.0+78999.0i, 13438.0+36678.0i}
The intersection of Set B and Set C (setB * setC) is {1.0+2.0i, 3.0+4.0i, 5.0+6.0i, 2757.0+95280.0i, 17711.0+23860.0i, 52295.0+93548.0i, 96348.0+14506.0i, 33473.0+23456.0i, 80067.0+10234.0i, 46291.0+85003.0i, 21983.0+11043.0i, 90748.0+51632.0i, 68981.0+70049.0i, 66845.0+76458.0i, 47618.0+34137.0i, 48023.0+6366.0i, 31337.0+29865.0i, 60840.0+67913.0i, 73253.0+57231.0i, 5297.0+34542.0i, 20251.0+89680.0i, 54836.0+59368.0i, 98889.0+53768.0i, 62572.0+89275.0i, 9166.0+49495.0i, 75390.0+50823.0i, 24524.0+76862.0i, 19847.0+17451.0i, 71522.0+35869.0i, 69385.0+42278.0i, 50159.0+99957.0i, 50564.0+72185.0i, 60436.0+95684.0i, 89939.0+33733.0i, 75794.0+23051.0i, 7838.0+361.0i, 22792.0+55500.0i, 83935.0+25187.0i, 1429.0+19588.0i, 65113.0+55095.0i, 11706.0+15315.0i, 77931.0+16642.0i, 27065.0+42682.0i, 22388.0+83271.0i, 620.0+1689.0i, 98484.0+8097.0i, 52700.0+65777.0i, 79662.0+38005.0i, 62977.0+61504.0i, 92480.0+99552.0i, 4893.0+88871.0i, 36937.0+66181.0i, 51891.0+21319.0i, 86476.0+91007.0i, 30528.0+85407.0i, 94212.0+20915.0i, 14247.0+81135.0i, 7029.0+55904.0i, 56163.0+8502.0i, 24928.0+49091.0i, 3161.0+40950.0i, 1025.0+47359.0i, 81799.0+31596.0i, 82203.0+3825.0i, 92075.0+27324.0i, 95021.0+38814.0i, 7434.0+28133.0i, 39478.0+32001.0i, 54432.0+87139.0i, 15574.0+30269.0i, 33069.0+51227.0i, 96752.0+86735.0i, 43346.0+46955.0i, 9570.0+21724.0i, 58704.0+74322.0i, 54027.0+14911.0i, 5702.0+6770.0i, 3566.0+13179.0i, 84339.0+97416.0i, 11302.0+43087.0i, 94616.0+93144.0i, 24119.0+4634.0i, 9975.0+93953.0i, 42019.0+97821.0i, 56972.0+52959.0i, 18115.0+96089.0i, 35610.0+17047.0i, 99293.0+25997.0i, 45887.0+12774.0i, 12111.0+87544.0i, 87803.0+40141.0i, 56568.0+80730.0i, 34801.0+72590.0i, 32664.0+78999.0i, 13438.0+36678.0i, 13843.0+8906.0i, 97157.0+32405.0i, 26660.0+70454.0i, 39073.0+59772.0i, 71117.0+63640.0i}
setD is not empty
setD is full
setE is not empty
setE is full
After removing C1, setA is {1.0+2.0i, 99.0-94.0i, -8.0i, -99.0, 78.9+0.6i, 98.1-9.0i}
setA is {1.0+2.0i, 99.0-94.0i, -8.0i, -99.0, 78.9+0.6i, 98.1-9.0i}
setB is {1.0+2.0i, 3.0+4.0i, 5.0+6.0i, 2757.0+95280.0i, 17711.0+23860.0i, 52295.0+93548.0i, 96348.0+14506.0i, 33473.0+23456.0i, 80067.0+10234.0i, 46291.0+85003.0i, 21983.0+11043.0i, 90748.0+51632.0i, 68981.0+70049.0i, 66845.0+76458.0i, 47618.0+34137.0i, 48023.0+6366.0i, 31337.0+29865.0i, 60840.0+67913.0i, 73253.0+57231.0i, 5297.0+34542.0i, 20251.0+89680.0i, 54836.0+59368.0i, 98889.0+53768.0i, 62572.0+89275.0i, 9166.0+49495.0i, 75390.0+50823.0i, 24524.0+76862.0i, 19847.0+17451.0i, 71522.0+35869.0i, 69385.0+42278.0i, 50159.0+99957.0i, 50564.0+72185.0i, 60436.0+95684.0i, 89939.0+33733.0i, 75794.0+23051.0i, 7838.0+361.0i, 22792.0+55500.0i, 83935.0+25187.0i, 1429.0+19588.0i, 65113.0+55095.0i, 11706.0+15315.0i, 77931.0+16642.0i, 27065.0+42682.0i, 22388.0+83271.0i, 620.0+1689.0i, 98484.0+8097.0i, 52700.0+65777.0i, 79662.0+38005.0i, 62977.0+61504.0i, 92480.0+99552.0i, 4893.0+88871.0i, 36937.0+66181.0i, 51891.0+21319.0i, 86476.0+91007.0i, 30528.0+85407.0i, 94212.0+20915.0i, 14247.0+81135.0i, 7029.0+55904.0i, 56163.0+8502.0i, 24928.0+49091.0i, 3161.0+40950.0i, 1025.0+47359.0i, 81799.0+31596.0i, 82203.0+3825.0i, 92075.0+27324.0i, 95021.0+38814.0i, 7434.0+28133.0i, 39478.0+32001.0i, 54432.0+87139.0i, 15574.0+30269.0i, 33069.0+51227.0i, 96752.0+86735.0i, 43346.0+46955.0i, 9570.0+21724.0i, 58704.0+74322.0i, 54027.0+14911.0i, 5702.0+6770.0i, 3566.0+13179.0i, 84339.0+97416.0i, 11302.0+43087.0i, 94616.0+93144.0i, 24119.0+4634.0i, 9975.0+93953.0i, 42019.0+97821.0i, 56972.0+52959.0i, 18115.0+96089.0i, 35610.0+17047.0i, 99293.0+25997.0i, 45887.0+12774.0i, 12111.0+87544.0i, 87803.0+40141.0i, 56568.0+80730.0i, 34801.0+72590.0i, 32664.0+78999.0i, 13438.0+36678.0i, 13843.0+8906.0i, 97157.0+32405.0i, 26660.0+70454.0i, 39073.0+59772.0i, 71117.0+63640.0i}
setC is {1.0+2.0i, 3.0+4.0i, 5.0+6.0i, 2757.0+95280.0i, 17711.0+23860.0i, 52295.0+93548.0i, 96348.0+14506.0i, 33473.0+23456.0i, 80067.0+10234.0i, 46291.0+85003.0i, 21983.0+11043.0i, 90748.0+51632.0i, 68981.0+70049.0i, 66845.0+76458.0i, 47618.0+34137.0i, 48023.0+6366.0i, 31337.0+29865.0i, 60840.0+67913.0i, 73253.0+57231.0i, 5297.0+34542.0i, 20251.0+89680.0i, 54836.0+59368.0i, 98889.0+53768.0i, 62572.0+89275.0i, 9166.0+49495.0i, 75390.0+50823.0i, 24524.0+76862.0i, 19847.0+17451.0i, 71522.0+35869.0i, 69385.0+42278.0i, 50159.0+99957.0i, 50564.0+72185.0i, 60436.0+95684.0i, 89939.0+33733.0i, 75794.0+23051.0i, 7838.0+361.0i, 22792.0+55500.0i, 83935.0+25187.0i, 1429.0+19588.0i, 65113.0+55095.0i, 11706.0+15315.0i, 77931.0+16642.0i, 27065.0+42682.0i, 22388.0+83271.0i, 620.0+1689.0i, 98484.0+8097.0i, 52700.0+65777.0i, 79662.0+38005.0i, 62977.0+61504.0i, 92480.0+99552.0i, 4893.0+88871.0i, 36937.0+66181.0i, 51891.0+21319.0i, 86476.0+91007.0i, 30528.0+85407.0i, 94212.0+20915.0i, 14247.0+81135.0i, 7029.0+55904.0i, 56163.0+8502.0i, 24928.0+49091.0i, 3161.0+40950.0i, 1025.0+47359.0i, 81799.0+31596.0i, 82203.0+3825.0i, 92075.0+27324.0i, 95021.0+38814.0i, 7434.0+28133.0i, 39478.0+32001.0i, 54432.0+87139.0i, 15574.0+30269.0i, 33069.0+51227.0i, 96752.0+86735.0i, 43346.0+46955.0i, 9570.0+21724.0i, 58704.0+74322.0i, 54027.0+14911.0i, 5702.0+6770.0i, 3566.0+13179.0i, 84339.0+97416.0i, 11302.0+43087.0i, 94616.0+93144.0i, 24119.0+4634.0i, 9975.0+93953.0i, 42019.0+97821.0i, 56972.0+52959.0i, 18115.0+96089.0i, 35610.0+17047.0i, 99293.0+25997.0i, 45887.0+12774.0i, 12111.0+87544.0i, 87803.0+40141.0i, 56568.0+80730.0i, 34801.0+72590.0i, 32664.0+78999.0i, 13438.0+36678.0i, 13843.0+8906.0i, 97157.0+32405.0i, 26660.0+70454.0i, 39073.0+59772.0i, 71117.0+63640.0i}
setD is {1.0+2.0i, 99.0-94.0i, -8.0i, -99.0, 78.9+0.6i, 98.1-9.0i, 3.0+4.0i, 5.0+6.0i, 2757.0+95280.0i, 17711.0+23860.0i, 52295.0+93548.0i, 96348.0+14506.0i, 33473.0+23456.0i, 80067.0+10234.0i, 46291.0+85003.0i, 21983.0+11043.0i, 90748.0+51632.0i, 68981.0+70049.0i, 66845.0+76458.0i, 47618.0+34137.0i, 48023.0+6366.0i, 31337.0+29865.0i, 60840.0+67913.0i, 73253.0+57231.0i, 5297.0+34542.0i, 20251.0+89680.0i, 54836.0+59368.0i, 98889.0+53768.0i, 62572.0+89275.0i, 9166.0+49495.0i, 75390.0+50823.0i, 24524.0+76862.0i, 19847.0+17451.0i, 71522.0+35869.0i, 69385.0+42278.0i, 50159.0+99957.0i, 50564.0+72185.0i, 60436.0+95684.0i, 89939.0+33733.0i, 75794.0+23051.0i, 7838.0+361.0i, 22792.0+55500.0i, 83935.0+25187.0i, 1429.0+19588.0i, 65113.0+55095.0i, 11706.0+15315.0i, 77931.0+16642.0i, 27065.0+42682.0i, 22388.0+83271.0i, 620.0+1689.0i, 98484.0+8097.0i, 52700.0+65777.0i, 79662.0+38005.0i, 62977.0+61504.0i, 92480.0+99552.0i, 4893.0+88871.0i, 36937.0+66181.0i, 51891.0+21319.0i, 86476.0+91007.0i, 30528.0+85407.0i, 94212.0+20915.0i, 14247.0+81135.0i, 7029.0+55904.0i, 56163.0+8502.0i, 24928.0+49091.0i, 3161.0+40950.0i, 1025.0+47359.0i, 81799.0+31596.0i, 82203.0+3825.0i, 92075.0+27324.0i, 95021.0+38814.0i, 7434.0+28133.0i, 39478.0+32001.0i, 54432.0+87139.0i, 15574.0+30269.0i, 33069.0+51227.0i, 96752.0+86735.0i, 43346.0+46955.0i, 9570.0+21724.0i, 58704.0+74322.0i, 54027.0+14911.0i, 5702.0+6770.0i, 3566.0+13179.0i, 84339.0+97416.0i, 11302.0+43087.0i, 94616.0+93144.0i, 24119.0+4634.0i, 9975.0+93953.0i, 42019.0+97821.0i, 56972.0+52959.0i, 18115.0+96089.0i, 35610.0+17047.0i, 99293.0+25997.0i, 45887.0+12774.0i, 12111.0+87544.0i, 87803.0+40141.0i, 56568.0+80730.0i, 34801.0+72590.0i, 32664.0+78999.0i, 13438.0+36678.0i}
setE is {1.0+2.0i, 3.0+4.0i, 5.0+6.0i, 2757.0+95280.0i, 17711.0+23860.0i, 52295.0+93548.0i, 96348.0+14506.0i, 33473.0+23456.0i, 80067.0+10234.0i, 46291.0+85003.0i, 21983.0+11043.0i, 90748.0+51632.0i, 68981.0+70049.0i, 66845.0+76458.0i, 47618.0+34137.0i, 48023.0+6366.0i, 31337.0+29865.0i, 60840.0+67913.0i, 73253.0+57231.0i, 5297.0+34542.0i, 20251.0+89680.0i, 54836.0+59368.0i, 98889.0+53768.0i, 62572.0+89275.0i, 9166.0+49495.0i, 75390.0+50823.0i, 24524.0+76862.0i, 19847.0+17451.0i, 71522.0+35869.0i, 69385.0+42278.0i, 50159.0+99957.0i, 50564.0+72185.0i, 60436.0+95684.0i, 89939.0+33733.0i, 75794.0+23051.0i, 7838.0+361.0i, 22792.0+55500.0i, 83935.0+25187.0i, 1429.0+19588.0i, 65113.0+55095.0i, 11706.0+15315.0i, 77931.0+16642.0i, 27065.0+42682.0i, 22388.0+83271.0i, 620.0+1689.0i, 98484.0+8097.0i, 52700.0+65777.0i, 79662.0+38005.0i, 62977.0+61504.0i, 92480.0+99552.0i, 4893.0+88871.0i, 36937.0+66181.0i, 51891.0+21319.0i, 86476.0+91007.0i, 30528.0+85407.0i, 94212.0+20915.0i, 14247.0+81135.0i, 7029.0+55904.0i, 56163.0+8502.0i, 24928.0+49091.0i, 3161.0+40950.0i, 1025.0+47359.0i, 81799.0+31596.0i, 82203.0+3825.0i, 92075.0+27324.0i, 95021.0+38814.0i, 7434.0+28133.0i, 39478.0+32001.0i, 54432.0+87139.0i, 15574.0+30269.0i, 33069.0+51227.0i, 96752.0+86735.0i, 43346.0+46955.0i, 9570.0+21724.0i, 58704.0+74322.0i, 54027.0+14911.0i, 5702.0+6770.0i, 3566.0+13179.0i, 84339.0+97416.0i, 11302.0+43087.0i, 94616.0+93144.0i, 24119.0+4634.0i, 9975.0+93953.0i, 42019.0+97821.0i, 56972.0+52959.0i, 18115.0+96089.0i, 35610.0+17047.0i, 99293.0+25997.0i, 45887.0+12774.0i, 12111.0+87544.0i, 87803.0+40141.0i, 56568.0+80730.0i, 34801.0+72590.0i, 32664.0+78999.0i, 13438.0+36678.0i, 13843.0+8906.0i, 97157.0+32405.0i, 26660.0+70454.0i, 39073.0+59772.0i, 71117.0+63640.0i}
Do you want to continue playing (y/n)?
y
setA is not empty
setB is full
Enter data into Set A
Enter number of elements in Set A, followed by the elements.
Separate elements with a whitespace
To enter a complex number enter only the real and imaginary parts
For example enter '4 8' to represent '4 + 8i'
hu  this is ma  bad input
* Input format was not valid
Input a filename to read data into Set B
this is not a file.txt
The file should have the number of elements, followed by the elements.
Separate elements with a whitespace
File was not found or opened. Program will exit.
make: *** [all] Error 1
bash-3.2$ 
bash-3.2$ 
bash-3.2$ make 
g++ setTestDriver.o Complex.o Set.o -o assignment4Exec
./assignment4Exec
Welcome to the Set Manipulation Program
In this program a Set has only complex numbers
The maximum number of elements in a Set is 100.Duplicate elements will be ignored
setA is empty
setB is not full
Enter data into Set A
Enter number of elements in Set A, followed by the elements.
Separate elements with a whitespace
To enter a complex number enter only the real and imaginary parts
For example enter '4 8' to represent '4 + 8i'
4  1 1 1 1 1 1 1 1
Input a filename to read data into Set B
inputs/input_small.txt
The file should have the number of elements, followed by the elements.
Separate elements with a whitespace
setA is {1.0+1.0i}
setB is {1.0+2.0i, 3.0+4.0i, 5.0+6.0i}
setA is not empty
setB is not full

setC = setB is {1.0+2.0i, 3.0+4.0i, 5.0+6.0i}
setD = C1 is {6.5+7.8i}
The union of Set A and Set B (setA + setB) is {1.0+1.0i, 1.0+2.0i, 3.0+4.0i, 5.0+6.0i}
After adding a complex number to the set, Set A is {1.0+1.0i, 6.5+7.8i}
After adding a complex number to the (union) set, Set D  is {1.0+1.0i, 1.0+2.0i, 3.0+4.0i, 5.0+6.0i, 6.5+7.8i}
The intersection of Set C and Set D (setC * setD) is {1.0+2.0i, 3.0+4.0i, 5.0+6.0i}
The intersection of Set B and Set C (setB * setC) is {1.0+2.0i, 3.0+4.0i, 5.0+6.0i}
setD is not empty
setD is not full
setE is not empty
setE is not full
After removing C1, setA is {1.0+1.0i}
setA is {1.0+1.0i}
setB is {1.0+2.0i, 3.0+4.0i, 5.0+6.0i}
setC is {1.0+2.0i, 3.0+4.0i, 5.0+6.0i}
setD is {1.0+1.0i, 1.0+2.0i, 3.0+4.0i, 5.0+6.0i, 6.5+7.8i}
setE is {1.0+2.0i, 3.0+4.0i, 5.0+6.0i}
Do you want to continue playing (y/n)?
n
Thanks for using this program.
Goodbye! 
bash-3.2$ exit
exit

Script done on Tue Apr  1 18:18:36 2014
